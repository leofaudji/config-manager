<?php
require_once __DIR__ . '/../includes/bootstrap.php';

$conn = Database::getInstance()->getConnection();

// Fetch all settings
$settings_result = $conn->query("SELECT * FROM settings");
$settings = [];
while ($row = $settings_result->fetch_assoc()) {
    $settings[$row['setting_key']] = $row['setting_value'];
}

// Fetch groups for dropdown
$groups_result = $conn->query("SELECT id, name FROM `groups` ORDER BY name ASC");
$groups = $groups_result->fetch_all(MYSQLI_ASSOC);

// Fetch Traefik hosts for dropdown
$traefik_hosts_result = $conn->query("SELECT id, name FROM `traefik_hosts` ORDER BY name ASC");
$traefik_hosts = $traefik_hosts_result->fetch_all(MYSQLI_ASSOC);

require_once __DIR__ . '/../includes/header.php';
?>

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2"><i class="bi bi-sliders"></i> General Settings</h1>
</div>

<form id="main-form" action="<?= base_url('/settings') ?>" method="POST" data-redirect="/settings">

    <!-- Traefik & YAML Configuration -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0"><i class="bi bi-file-earmark-code-fill me-2"></i>Traefik & YAML Configuration</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="active_traefik_host_id" class="form-label">Active Traefik Host</label>
                    <select class="form-select" id="active_traefik_host_id" name="active_traefik_host_id">
                        <?php foreach ($traefik_hosts as $host): ?>
                            <option value="<?= $host['id'] ?>" <?= ($settings['active_traefik_host_id'] ?? 1) == $host['id'] ? 'selected' : '' ?>><?= htmlspecialchars($host['name']) ?></option>
                        <?php endforeach; ?>
                    </select>
                    <small class="form-text text-muted">Determines which Traefik Host's configuration is generated by default.</small>
                </div>
                <div class="col-md-6 mb-3">
                    <label for="yaml_output_path" class="form-label">Traefik Dynamic Config Base Path</label>
                    <input type="text" class="form-control" id="yaml_output_path" name="yaml_output_path" value="<?= htmlspecialchars($settings['yaml_output_path'] ?? '/var/www/html/config-manager/traefik-configs') ?>" required>
                    <small class="form-text text-muted">The absolute base path on the server where generated `dynamic.yml` files will be stored.</small>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="default_router_prefix" class="form-label">Default Router Prefix</label>
                    <input type="text" class="form-control" id="default_router_prefix" name="default_router_prefix" value="<?= htmlspecialchars($settings['default_router_prefix'] ?? 'router-') ?>">
                    <small class="form-text text-muted">Prefix automatically added to new router names.</small>
                </div>
                <div class="col-md-6 mb-3">
                    <label for="default_service_prefix" class="form-label">Default Service Prefix</label>
                    <input type="text" class="form-control" id="default_service_prefix" name="default_service_prefix" value="<?= htmlspecialchars($settings['default_service_prefix'] ?? 'service-') ?>">
                    <small class="form-text text-muted">Prefix automatically added to new service names.</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Health Check & Agent Configuration -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0"><i class="bi bi-heart-pulse-fill me-2"></i>Health Check & Agent Configuration</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="app_base_url" class="form-label">Application Base URL</label>
                    <input type="url" class="form-control" id="app_base_url" name="app_base_url" value="<?= htmlspecialchars($settings['app_base_url'] ?? '') ?>" placeholder="http://config-manager.example.com" required>
                    <small class="form-text text-muted">The public URL of this Config Manager application. Used by agents to report back.</small>
                </div>
                <div class="col-md-6 mb-3">
                    <label for="health_agent_image" class="form-label">Health Agent Image</label>
                    <input type="text" class="form-control" id="health_agent_image" name="health_agent_image" value="<?= htmlspecialchars($settings['health_agent_image'] ?? 'your-registry/config-manager-agent:latest') ?>" required>
                    <small class="form-text text-muted">The full name of the Health Agent Docker image to deploy on hosts.</small>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="health_agent_api_token" class="form-label">Health Agent API Token</label>
                    <div class="input-group">
                        <input type="password" class="form-control" id="health_agent_api_token" name="health_agent_api_token" value="<?= htmlspecialchars($settings['health_agent_api_token'] ?? '') ?>" required>
                        <button class="btn btn-outline-secondary" type="button" id="toggle-token-visibility"><i class="bi bi-eye"></i></button>
                        <button class="btn btn-outline-secondary" type="button" id="generate-token-btn" title="Generate a new secure token"><i class="bi bi-arrow-clockwise"></i></button>
                    </div>
                    <small class="form-text text-muted">A secret token for agents to authenticate with the main server.</small>
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label">Agent Log Levels to Send</label>
                    <div class="d-flex flex-wrap">
                        <?php
                        $log_levels = ['INFO', 'WARN', 'ERROR', 'FATAL', 'UNHEALTHY'];
                        $selected_levels = explode(',', $settings['agent_log_levels'] ?? 'ERROR,FATAL,UNHEALTHY');
                        foreach ($log_levels as $level): ?>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" name="agent_log_levels[]" value="<?= $level ?>" id="log_level_<?= strtolower($level) ?>" <?= in_array($level, $selected_levels) ? 'checked' : '' ?>>
                                <label class="form-check-label" for="log_level_<?= strtolower($level) ?>"><?= $level ?></label>
                            </div>
                        <?php endforeach; ?>
                    </div>
                    <small class="form-text text-muted">Select which log levels the agent should send to the central server.</small>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 mb-3">
                    <div class="form-check form-switch mt-4 pt-2">
                        <input class="form-check-input" type="checkbox" role="switch" id="health_check_global_enable" name="health_check_global_enable" <?= ($settings['health_check_global_enable'] ?? 0) == 1 ? 'checked' : '' ?>>
                        <label class="form-check-label" for="health_check_global_enable">Enable Global Health Checks</label>
                        <small class="form-text text-muted d-block">Force checks on all services, ignoring their individual settings.</small>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="form-check form-switch mt-4 pt-2">
                        <input class="form-check-input" type="checkbox" role="switch" id="auto_healing_enabled" name="auto_healing_enabled" <?= ($settings['auto_healing_enabled'] ?? 0) == 1 ? 'checked' : '' ?>>
                        <label class="form-check-label" for="auto_healing_enabled">Enable Auto Healing</label>
                        <small class="form-text text-muted d-block">Automatically restart containers/services marked as unhealthy.</small>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="health_check_default_healthy_threshold" class="form-label">Healthy Threshold</label>
                    <input type="number" class="form-control" id="health_check_default_healthy_threshold" name="health_check_default_healthy_threshold" value="<?= (int)($settings['health_check_default_healthy_threshold'] ?? 2) ?>" min="1">
                    <small class="form-text text-muted">Number of consecutive successes to be marked as 'healthy'.</small>
                </div>
                <div class="col-md-6 mb-3">
                    <label for="health_check_default_unhealthy_threshold" class="form-label">Unhealthy Threshold</label>
                    <input type="number" class="form-control" id="health_check_default_unhealthy_threshold" name="health_check_default_unhealthy_threshold" value="<?= (int)($settings['health_check_default_unhealthy_threshold'] ?? 3) ?>" min="1">
                    <small class="form-text text-muted">Number of consecutive failures to be marked as 'unhealthy'.</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Git Integration -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0"><i class="bi bi-git me-2"></i>Git Integration</h5>
        </div>
        <div class="card-body">
            <div class="form-check form-switch mb-3">
                <input class="form-check-input" type="checkbox" role="switch" id="git_integration_enabled" name="git_integration_enabled" <?= ($settings['git_integration_enabled'] ?? 0) == 1 ? 'checked' : '' ?>>
                <label class="form-check-label" for="git_integration_enabled">Enable Git Integration for Stack Sync</label>
            </div>
            <div id="git-settings-container" class="<?= ($settings['git_integration_enabled'] ?? 0) == 1 ? '' : 'd-none' ?>">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="git_repository_url" class="form-label">Git Repository URL</label>
                        <input type="text" class="form-control" id="git_repository_url" name="git_repository_url" value="<?= htmlspecialchars($settings['git_repository_url'] ?? '') ?>" placeholder="https://github.com/user/repo.git or git@github.com:user/repo.git">
                        <small class="form-text text-muted">The URL of the Git repository for backing up stack configurations.</small>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="git_branch" class="form-label">Branch</label>
                        <input type="text" class="form-control" id="git_branch" name="git_branch" value="<?= htmlspecialchars($settings['git_branch'] ?? 'main') ?>">
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="git_user_name" class="form-label">Git Commit User Name</label>
                        <input type="text" class="form-control" id="git_user_name" name="git_user_name" value="<?= htmlspecialchars($settings['git_user_name'] ?? 'Config Manager') ?>">
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="git_user_email" class="form-label">Git Commit User Email</label>
                        <input type="email" class="form-control" id="git_user_email" name="git_user_email" value="<?= htmlspecialchars($settings['git_user_email'] ?? 'bot@config-manager.local') ?>">
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="git_ssh_key_path" class="form-label">Git SSH Key Path (for SSH URLs)</label>
                        <input type="text" class="form-control" id="git_ssh_key_path" name="git_ssh_key_path" value="<?= htmlspecialchars($settings['git_ssh_key_path'] ?? '') ?>" placeholder="/root/.ssh/id_rsa">
                        <small class="form-text text-muted">Absolute path to the private SSH key on the server.</small>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="git_pat" class="form-label">Personal Access Token (for HTTPS URLs)</label>
                        <input type="password" class="form-control" id="git_pat" name="git_pat" value="<?= htmlspecialchars($settings['git_pat'] ?? '') ?>">
                        <small class="form-text text-muted">A PAT with repo access. Used as the password for HTTPS authentication.</small>
                    </div>
                </div>
                <button type="button" id="test-git-connection-btn" class="btn btn-outline-secondary"><i class="bi bi-plug-fill"></i> Test Git Connection</button>
                <div id="git-test-result" class="mt-2"></div>
            </div>
        </div>
    </div>

    <!-- Notifications -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0"><i class="bi bi-bell-fill me-2"></i>Notifications</h5>
        </div>
        <div class="card-body">
            <div class="form-check form-switch mb-3">
                <input class="form-check-input" type="checkbox" role="switch" id="notification_enabled" name="notification_enabled" <?= ($settings['notification_enabled'] ?? 0) == 1 ? 'checked' : '' ?>>
                <label class="form-check-label" for="notification_enabled">Enable Notifications</label>
            </div>
            <div id="notification-settings-container" class="<?= ($settings['notification_enabled'] ?? 0) == 1 ? '' : 'd-none' ?>">
                <div class="mb-3">
                    <label for="notification_server_url" class="form-label">Notification Server URL</label>
                    <input type="url" class="form-control" id="notification_server_url" name="notification_server_url" value="<?= htmlspecialchars($settings['notification_server_url'] ?? '') ?>" placeholder="https://your-ntfy-server.com/topic">
                    <small class="form-text text-muted">The URL of your ntfy.sh server and topic.</small>
                </div>
                <div class="mb-3">
                    <label for="notification_secret_token" class="form-label">Authentication Token (Optional)</label>
                    <input type="password" class="form-control" id="notification_secret_token" name="notification_secret_token" value="<?= htmlspecialchars($settings['notification_secret_token'] ?? '') ?>">
                    <small class="form-text text-muted">If your ntfy topic requires authentication, enter the token here.</small>
                </div>
            </div>
        </div>
    </div>

    <!-- System & Paths -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0"><i class="bi bi-folder-fill me-2"></i>System & Paths</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="default_compose_path" class="form-label">Default Standalone Compose Path</label>
                    <input type="text" class="form-control" id="default_compose_path" name="default_compose_path" value="<?= htmlspecialchars($settings['default_compose_path'] ?? '/var/www/html/compose-files') ?>">
                    <small class="form-text text-muted">Base path on this server where compose files for standalone hosts are stored.</small>
                </div>
                <div class="col-md-6 mb-3">
                    <label for="default_git_compose_path" class="form-label">Default Git Compose File Path</label>
                    <input type="text" class="form-control" id="default_git_compose_path" name="default_git_compose_path" value="<?= htmlspecialchars($settings['default_git_compose_path'] ?? 'docker-compose.yml') ?>">
                    <small class="form-text text-muted">Default filename/path to look for inside a Git repository.</small>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="git_persistent_repo_path" class="form-label">Git Persistent Repo Path</label>
                    <input type="text" class="form-control" id="git_persistent_repo_path" name="git_persistent_repo_path" value="<?= htmlspecialchars($settings['git_persistent_repo_path'] ?? '/var/www/html/config-manager/git-repo') ?>">
                    <small class="form-text text-muted">Path to store a persistent clone of the Git repository for stack sync.</small>
                </div>
                <div class="col-md-6 mb-3">
                    <label for="temp_directory_path" class="form-label">Temporary Directory Path</label>
                    <input type="text" class="form-control" id="temp_directory_path" name="temp_directory_path" value="<?= htmlspecialchars($settings['temp_directory_path'] ?? sys_get_temp_dir()) ?>">
                    <small class="form-text text-muted">Path for temporary files, like Git clones for App Launcher.</small>
                </div>
            </div>
             <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="cron_log_path" class="form-label">Cron Job Log Path</label>
                    <input type="text" class="form-control" id="cron_log_path" name="cron_log_path" value="<?= htmlspecialchars($settings['cron_log_path'] ?? '/var/log') ?>">
                    <small class="form-text text-muted">Directory where cron job output logs will be stored (e.g., `health_monitor.log`).</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Data & History Management -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0"><i class="bi bi-clock-history me-2"></i>Data & History Management</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="history_cleanup_days" class="form-label">Cleanup Archived History After (Days)</label>
                    <input type="number" class="form-control" id="history_cleanup_days" name="history_cleanup_days" value="<?= (int)($settings['history_cleanup_days'] ?? 30) ?>" min="1">
                    <small class="form-text text-muted">Automatically delete archived deployment history entries older than this value.</small>
                </div>
                <div class="col-md-6 mb-3">
                    <label for="log_cleanup_days" class="form-label">Cleanup Activity Logs After (Days)</label>
                    <input type="number" class="form-control" id="log_cleanup_days" name="log_cleanup_days" value="<?= (int)($settings['log_cleanup_days'] ?? 7) ?>" min="1">
                    <small class="form-text text-muted">Automatically delete activity log entries older than this value.</small>
                </div>
                <div class="col-md-6 mb-3">
                    <label for="host_stats_history_cleanup_days" class="form-label">Cleanup Host Stats History After (Days)</label>
                    <input type="number" class="form-control" id="host_stats_history_cleanup_days" name="host_stats_history_cleanup_days" value="<?= (int)($settings['host_stats_history_cleanup_days'] ?? 7) ?>" min="1">
                    <small class="form-text text-muted">Automatically delete host resource usage history older than this value.</small>
                </div>
                <div class="col-md-6 mb-3">
                    <label for="cron_log_retention_days" class="form-label">Cron Log Retention Period (Days)</label>
                    <input type="number" class="form-control" id="cron_log_retention_days" name="cron_log_retention_days" value="<?= (int)($settings['cron_log_retention_days'] ?? 7) ?>" min="0">
                    <small class="form-text text-muted">Delete log entries inside cron log files that are older than this many days. Set to 0 to disable.</small>
                </div>
            </div>
        </div>
    </div>

    <div class="mt-4">
        <button type="submit" class="btn btn-primary"><i class="bi bi-save-fill"></i> Save All Settings</button>
    </div>
</form>

<script>
window.pageInit = function() {
    // Toggle visibility for Git settings
    const gitSwitch = document.getElementById('git_integration_enabled');
    const gitContainer = document.getElementById('git-settings-container');
    if (gitSwitch && gitContainer) {
        gitSwitch.addEventListener('change', function() {
            gitContainer.classList.toggle('d-none', !this.checked);
        });
    }

    // Toggle visibility for Notification settings
    const notifSwitch = document.getElementById('notification_enabled');
    const notifContainer = document.getElementById('notification-settings-container');
    if (notifSwitch && notifContainer) {
        notifSwitch.addEventListener('change', function() {
            notifContainer.classList.toggle('d-none', !this.checked);
        });
    }

    // Generate new API token for Health Agent
    const generateTokenBtn = document.getElementById('generate-token-btn');
    const tokenInput = document.getElementById('health_agent_api_token');
    if (generateTokenBtn && tokenInput) {
        generateTokenBtn.addEventListener('click', function() {
            // Generate a 32-byte random string, hex-encoded to 64 characters
            const buffer = new Uint8Array(32);
            window.crypto.getRandomValues(buffer);
            const token = Array.from(buffer, byte => byte.toString(16).padStart(2, '0')).join('');
            tokenInput.value = token;
            showToast('New token generated. Remember to save settings and redeploy agents.', true);
        });
    }

    // Toggle token visibility
    const toggleTokenBtn = document.getElementById('toggle-token-visibility');
    if (toggleTokenBtn && tokenInput) {
        toggleTokenBtn.addEventListener('click', function() {
            const icon = this.querySelector('i');
            if (tokenInput.type === 'password') {
                tokenInput.type = 'text';
                icon.classList.remove('bi-eye');
                icon.classList.add('bi-eye-slash');
            } else {
                tokenInput.type = 'password';
                icon.classList.remove('bi-eye-slash');
                icon.classList.add('bi-eye');
            }
        });
    }

    // Test Git Connection
    const testGitBtn = document.getElementById('test-git-connection-btn');
    if (testGitBtn) {
        testGitBtn.addEventListener('click', function() {
            const resultContainer = document.getElementById('git-test-result');
            const originalBtnText = this.innerHTML;
            this.disabled = true;
            this.innerHTML = `<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Testing...`;
            resultContainer.innerHTML = '';

            const formData = new FormData();
            formData.append('git_repository_url', document.getElementById('git_repository_url').value);
            formData.append('git_ssh_key_path', document.getElementById('git_ssh_key_path').value);
            formData.append('git_pat', document.getElementById('git_pat').value);

            fetch('<?= base_url('/api/git/test-connection') ?>', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json().then(data => ({ok: response.ok, data})))
            .then(({ok, data}) => {
                const alertClass = ok ? 'alert-success' : 'alert-danger';
                const icon = ok ? 'bi-check-circle-fill' : 'bi-exclamation-triangle-fill';
                resultContainer.innerHTML = `<div class="alert ${alertClass} d-flex align-items-center mt-2"><i class="bi ${icon} me-2"></i><div>${data.message}</div></div>`;
            })
            .catch(error => {
                resultContainer.innerHTML = `<div class="alert alert-danger d-flex align-items-center mt-2"><i class="bi bi-exclamation-triangle-fill me-2"></i><div>An unknown error occurred: ${error.message}</div></div>`;
            })
            .finally(() => {
                this.disabled = false;
                this.innerHTML = originalBtnText;
            });
        });
    }
};
</script>

<?php
require_once __DIR__ . '/../includes/footer.php';
?>